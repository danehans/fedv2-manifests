apiVersion: generated.federation.k8s.io/v1alpha1
kind: FederatedClusterRole
metadata:
  name: istio-cleanup-secrets-istio-system
  annotations:
    "helm.sh/hook": post-delete
    "helm.sh/hook-delete-policy": hook-succeeded
    "helm.sh/hook-weight": "1"
  labels:
    app: security
    chart: security-1.0.3
    heritage: Tiller
    release: istio
spec:
  template:
    rules:
    - apiGroups: [""]
      resources: ["secrets"]
      verbs: ["list", "delete"]
---
apiVersion: generated.federation.k8s.io/v1alpha1
kind: FederatedClusterRolePlacement
metadata:
  name: istio-cleanup-secrets-istio-system
  annotations:
    "helm.sh/hook": post-delete
    "helm.sh/hook-delete-policy": hook-succeeded
    "helm.sh/hook-weight": "1"
  labels:
    app: security
    chart: security-1.0.3
    heritage: Tiller
    release: istio
spec:
  clusterNames:
  - cluster2
  - cluster1
---
apiVersion: generated.federation.k8s.io/v1alpha1
kind: FederatedClusterRole
metadata:
  name: istio-security-post-install-istio-system
  labels:
    app: istio-security
    chart: security-1.0.3
    heritage: Tiller
    release: istio
spec:
  template:
    rules:
    - apiGroups: ["authentication.istio.io"] # needed to create default authn policy
      resources: ["*"]
      verbs: ["*"]
    - apiGroups: ["networking.istio.io"] # needed to create security destination rules
      resources: ["*"]
      verbs: ["*"]
    - apiGroups: ["admissionregistration.k8s.io"]
      resources: ["validatingwebhookconfigurations"]
      verbs: ["get"]
    - apiGroups: ["extensions"]
      resources: ["deployments", "replicasets"]
      verbs: ["get", "list", "watch"]
---
apiVersion: generated.federation.k8s.io/v1alpha1
kind: FederatedClusterRolePlacement
metadata:
  name: istio-security-post-install-istio-system
  labels:
    app: istio-security
    chart: security-1.0.3
    heritage: Tiller
    release: istio
spec:
  clusterNames:
  - cluster2
  - cluster1
---
# Source: istio/charts/galley/templates/clusterrole.yaml
apiVersion: generated.federation.k8s.io/v1alpha1
kind: FederatedClusterRole
metadata:
  name: istio-galley-istio-system
  labels:
    app: istio-galley
    chart: galley-1.0.3
    heritage: Tiller
    release: istio
spec:
  template:
    rules:
    - apiGroups: ["admissionregistration.k8s.io"]
      resources: ["validatingwebhookconfigurations"]
      verbs: ["*"]
    - apiGroups: ["config.istio.io"] # istio mixer CRD watcher
      resources: ["*"]
      verbs: ["get", "list", "watch"]
    - apiGroups: ["*"]
      resources: ["deployments"]
      resourceNames: ["istio-galley"]
      verbs: ["get"]
    - apiGroups: ["*"]
      resources: ["endpoints"]
      resourceNames: ["istio-galley"]
      verbs: ["get"]
---
apiVersion: generated.federation.k8s.io/v1alpha1
kind: FederatedClusterRolePlacement
metadata:
  name: istio-galley-istio-system
  labels:
    app: istio-galley
    chart: galley-1.0.3
    heritage: Tiller
    release: istio
spec:
  clusterNames:
  - cluster2
  - cluster1
---
# Source: istio/charts/gateways/templates/clusterrole.yaml
apiVersion: generated.federation.k8s.io/v1alpha1
kind: FederatedClusterRole
metadata:
  labels:
    app: gateways
    chart: gateways-1.0.3
    heritage: Tiller
    release: istio
  name: istio-egressgateway-istio-system
spec:
  template:
    rules:
    - apiGroups: ["extensions"]
      resources: ["thirdpartyresources", "virtualservices", "destinationrules", "gateways"]
      verbs: ["get", "watch", "list", "update"]
---
apiVersion: generated.federation.k8s.io/v1alpha1
kind: FederatedClusterRolePlacement
metadata:
  labels:
    app: gateways
    chart: gateways-1.0.3
    heritage: Tiller
    release: istio
  name: istio-egressgateway-istio-system
spec:
  clusterNames:
  - cluster2
  - cluster1
---
apiVersion: generated.federation.k8s.io/v1alpha1
kind: FederatedClusterRole
metadata:
  labels:
    app: gateways
    chart: gateways-1.0.3
    heritage: Tiller
    release: istio
  name: istio-ingressgateway-istio-system
spec:
  template:
    rules:
    - apiGroups: ["extensions"]
      resources: ["thirdpartyresources", "virtualservices", "destinationrules", "gateways"]
      verbs: ["get", "watch", "list", "update"]
---
apiVersion: generated.federation.k8s.io/v1alpha1
kind: FederatedClusterRolePlacement
metadata:
  labels:
    app: gateways
    chart: gateways-1.0.3
    heritage: Tiller
    release: istio
  name: istio-ingressgateway-istio-system
spec:
  clusterNames:
  - cluster2
  - cluster1
---
# Source: istio/charts/mixer/templates/clusterrole.yaml
apiVersion: generated.federation.k8s.io/v1alpha1
kind: FederatedClusterRole
metadata:
  name: istio-mixer-istio-system
  labels:
    app: mixer
    chart: mixer-1.0.3
    heritage: Tiller
    release: istio
spec:
  template:
    rules:
    - apiGroups: ["config.istio.io"] # istio CRD watcher
      resources: ["*"]
      verbs: ["create", "get", "list", "watch", "patch"]
    - apiGroups: ["rbac.istio.io"] # istio RBAC watcher
      resources: ["*"]
      verbs: ["get", "list", "watch"]
    - apiGroups: ["apiextensions.k8s.io"]
      resources: ["customresourcedefinitions"]
      verbs: ["get", "list", "watch"]
    - apiGroups: [""]
      resources: ["configmaps", "endpoints", "pods", "services", "namespaces", "secrets", "replicationcontrollers"]
      verbs: ["get", "list", "watch"]
    - apiGroups: ["extensions"]
      resources: ["replicasets"]
      verbs: ["get", "list", "watch"]
    - apiGroups: ["apps"]
      resources: ["replicasets"]
      verbs: ["get", "list", "watch"]

---
apiVersion: generated.federation.k8s.io/v1alpha1
kind: FederatedClusterRolePlacement
metadata:
  name: istio-mixer-istio-system
  labels:
    app: mixer
    chart: mixer-1.0.3
    heritage: Tiller
    release: istio
spec:
  clusterNames:
  - cluster2
  - cluster1
---
# Source: istio/charts/pilot/templates/clusterrole.yaml
apiVersion: generated.federation.k8s.io/v1alpha1
kind: FederatedClusterRole
metadata:
  name: istio-pilot-istio-system
  labels:
    app: istio-pilot
    chart: pilot-1.0.3
    heritage: Tiller
    release: istio
spec:
  template:
    rules:
    - apiGroups: ["config.istio.io"]
      resources: ["*"]
      verbs: ["*"]
    - apiGroups: ["rbac.istio.io"]
      resources: ["*"]
      verbs: ["get", "watch", "list"]
    - apiGroups: ["networking.istio.io"]
      resources: ["*"]
      verbs: ["*"]
    - apiGroups: ["authentication.istio.io"]
      resources: ["*"]
      verbs: ["*"]
    - apiGroups: ["apiextensions.k8s.io"]
      resources: ["customresourcedefinitions"]
      verbs: ["*"]
    - apiGroups: ["extensions"]
      resources: ["thirdpartyresources", "thirdpartyresources.extensions", "ingresses", "ingresses/status"]
      verbs: ["*"]
    - apiGroups: [""]
      resources: ["configmaps"]
      verbs: ["create", "get", "list", "watch", "update"]
    - apiGroups: [""]
      resources: ["endpoints", "pods", "services"]
      verbs: ["get", "list", "watch"]
    - apiGroups: [""]
      resources: ["namespaces", "nodes", "secrets"]
      verbs: ["get", "list", "watch"]
---
apiVersion: generated.federation.k8s.io/v1alpha1
kind: FederatedClusterRolePlacement
metadata:
  name: istio-pilot-istio-system
  labels:
    app: istio-pilot
    chart: pilot-1.0.3
    heritage: Tiller
    release: istio
spec:
  clusterNames:
  - cluster2
  - cluster1
---
# Source: istio/charts/prometheus/templates/clusterrole.yaml
apiVersion: generated.federation.k8s.io/v1alpha1
kind: FederatedClusterRole
metadata:
  name: prometheus-istio-system
spec:
  template:
    rules:
    - apiGroups: [""]
      resources:
      - nodes
      - services
      - endpoints
      - pods
      - nodes/proxy
      verbs: ["get", "list", "watch"]
    - apiGroups: [""]
      resources:
      - configmaps
      verbs: ["get"]
    - nonResourceURLs: ["/metrics"]
      verbs: ["get"]
---
apiVersion: generated.federation.k8s.io/v1alpha1
kind: FederatedClusterRolePlacement
metadata:
  name: prometheus-istio-system
spec:
  clusterNames:
  - cluster2
  - cluster1
---
# Source: istio/charts/security/templates/clusterrole.yaml
apiVersion: generated.federation.k8s.io/v1alpha1
kind: FederatedClusterRole
metadata:
  name: istio-citadel-istio-system
  labels:
    app: security
    chart: security-1.0.3
    heritage: Tiller
    release: istio
spec:
  template:
    rules:
    - apiGroups: [""]
      resources: ["secrets"]
      verbs: ["create", "get", "watch", "list", "update", "delete"]
    - apiGroups: [""]
      resources: ["serviceaccounts"]
      verbs: ["get", "watch", "list"]
    - apiGroups: [""]
      resources: ["services"]
      verbs: ["get", "watch", "list"]
---
apiVersion: generated.federation.k8s.io/v1alpha1
kind: FederatedClusterRolePlacement
metadata:
  name: istio-citadel-istio-system
  labels:
    app: security
    chart: security-1.0.3
    heritage: Tiller
    release: istio
spec:
  clusterNames:
  - cluster2
  - cluster1
---
# Source: istio/charts/sidecarInjectorWebhook/templates/clusterrole.yaml
apiVersion: generated.federation.k8s.io/v1alpha1
kind: FederatedClusterRole
metadata:
  name: istio-sidecar-injector-istio-system
  labels:
    app: istio-sidecar-injector
    chart: sidecarInjectorWebhook-1.0.3
    heritage: Tiller
    release: istio
spec:
  template:
    rules:
    - apiGroups: ["*"]
      resources: ["configmaps"]
      verbs: ["get", "list", "watch"]
    - apiGroups: ["admissionregistration.k8s.io"]
      resources: ["mutatingwebhookconfigurations"]
      verbs: ["get", "list", "watch", "patch"]
---
apiVersion: generated.federation.k8s.io/v1alpha1
kind: FederatedClusterRolePlacement
metadata:
  name: istio-sidecar-injector-istio-system
  labels:
    app: istio-sidecar-injector
    chart: sidecarInjectorWebhook-1.0.3
    heritage: Tiller
    release: istio
spec:
  clusterNames:
  - cluster2
  - cluster1